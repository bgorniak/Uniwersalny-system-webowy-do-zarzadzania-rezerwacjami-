# Generated by Django 4.2.17 on 2025-01-03 21:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50, verbose_name='Imię')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nazwisko')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adres email')),
                ('balance', models.IntegerField(default=0, verbose_name='Saldo')),
                ('is_active', models.BooleanField(default=False, verbose_name='Aktywny')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Administrator')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data dołączenia')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Użytkownik',
                'verbose_name_plural': 'Użytkownicy',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255, verbose_name='Temat')),
                ('sender', models.CharField(choices=[('admin', 'Administrator'), ('user', 'Użytkownik')], default='admin', max_length=50, verbose_name='Nadawca')),
                ('content', models.TextField(verbose_name='Treść wiadomości')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data wysłania')),
                ('is_read', models.BooleanField(default=False, verbose_name='Przeczytane')),
                ('response', models.TextField(blank=True, null=True, verbose_name='Odpowiedź')),
                ('response_date', models.DateTimeField(blank=True, null=True, verbose_name='Data odpowiedzi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Wiadomość',
                'verbose_name_plural': 'Wiadomości',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('location', models.CharField(max_length=255, verbose_name='Lokalizacja')),
                ('type', models.CharField(choices=[('Hotel', 'Hotel'), ('Restauracja', 'Restauracja'), ('SPA&WELLNESS', 'SPA i WELLNESS'), ('Wycieczka', 'Wycieczka')], max_length=20, verbose_name='Typ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('available_from', models.DateField(blank=True, null=True, verbose_name='Dostępne od')),
                ('available_to', models.DateField(blank=True, null=True, verbose_name='Dostępne do')),
            ],
            options={
                'verbose_name': 'Usługa',
                'verbose_name_plural': 'Usługi',
            },
        ),
        migrations.CreateModel(
            name='ServiceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('operational', 'Działający'), ('maintenance', 'W trakcie konserwacji'), ('down', 'Niedostępny')], default='operational', max_length=20, verbose_name='Status serwisu')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Komunikat')),
                ('next_available', models.DateTimeField(blank=True, null=True, verbose_name='Czas ponownej dostępności')),
            ],
            options={
                'verbose_name': 'Status serwisu',
                'verbose_name_plural': 'Statusy serwisu',
            },
        ),
        migrations.CreateModel(
            name='ServiceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('capacity', models.PositiveIntegerField(verbose_name='Ilość osób')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena')),
                ('available_from', models.DateField(blank=True, null=True, verbose_name='Dostępne od')),
                ('available_to', models.DateField(blank=True, null=True, verbose_name='Dostępne do')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_options', to='main.service', verbose_name='Usługa')),
            ],
            options={
                'verbose_name': 'Opcja usługi',
                'verbose_name_plural': 'Opcje usługi',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Komentarz')),
                ('rating', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Ocena')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.service', verbose_name='Usługa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Opinia',
                'verbose_name_plural': 'Opinie',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, editable=False, max_length=255, verbose_name='Nazwa usługi')),
                ('start_datetime', models.DateTimeField(verbose_name='Data rozpoczęcia')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('new_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Nowa data rozpoczęcia')),
                ('new_end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Nowa data zakończenia')),
                ('status', models.CharField(choices=[('pending', 'Oczekująca'), ('confirmed', 'Potwierdzona'), ('cancelled', 'Anulowana'), ('pending cancellation', 'Oczekuje na anulowanie'), ('pending modification', 'Oczekuje na zmianę terminu')], default='pending', max_length=20, verbose_name='Status')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cena')),
                ('messages', models.ManyToManyField(blank=True, related_name='reservations', to='main.message', verbose_name='Wiadomości')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.serviceoption', verbose_name='Opcja')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.service', verbose_name='Usługa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Rezerwacja',
                'verbose_name_plural': 'Rezerwacje',
            },
        ),
        migrations.CreateModel(
            name='FinanceSummaryLink',
            fields=[
            ],
            options={
                'verbose_name': 'Podsumowanie finansowe',
                'verbose_name_plural': 'Podsumowanie finansowe',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.reservation',),
        ),
    ]
